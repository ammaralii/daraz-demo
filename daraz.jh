enum OrderDeliveryShippingMethod {
    PENDING, DELIVERED, CANCELLED
}
enum ShippingDetailsShippingMethod {
    COD, CASH, CARD
}

entity Addresses(addresses) {
    street String required maxlength(30),
    city String required maxlength(30),
    state String required maxlength(30)
}

entity Cars(cars) {
    caruid Integer required,
    name String required maxlength(100)
}

entity Categories(categories) {
    name String required maxlength(100),
    detail String required maxlength(100)
}

entity Colors(colors) {
    coloruid Integer required,
    name String required maxlength(100)
}

entity Customers(customers) {
    fullName String required maxlength(100),
    email String required maxlength(255),
    phone String required maxlength(255)
}

entity OrderDelivery(Order_Delivery) {
    deliveryDate LocalDate,
    deliveryCharge Double,
    shippingMethod OrderDeliveryShippingMethod required
}

entity OrderDetails(Order_Details) {
    quantity Integer,
    amount Double
}

entity Orders(Orders) {
    orderDate LocalDate required,
    totalAmount Integer
}

entity PaymentMethods(Payment_Methods) {
    cardNumber String required maxlength(32),
    cardHolderName String required maxlength(32),
    expirationDate String required maxlength(10)
}

entity ProductDetails(Product_Details) {
    description String required maxlength(65535),
    imageUrl String required maxlength(32),
    isavailable Boolean required
}

entity Products(Products) {
    name String required maxlength(100)
}

entity Roles(roles) {
    rolePrId Integer required,
    name String required maxlength(30)
}

entity ShippingDetails(Shipping_Details) {
    shippingAddress String required maxlength(32),
    shippingMethod ShippingDetailsShippingMethod required,
    estimatedDeliveryDate LocalDate required
}

entity Users(users) {
    fullName String required maxlength(100),
    email String required maxlength(255),
    phone String required maxlength(255)
}

// Relations
relationship ManyToOne {
    Addresses{user required} to Users{addressesUser}
}

relationship ManyToMany {
    Cars{color} to Colors{car}
}

relationship ManyToOne {
    OrderDelivery{order required} to Orders{orderdeliveryOrder}
}

relationship ManyToOne {
    OrderDelivery{shippingAddress required} to ShippingDetails{orderdeliveryShippingaddress}
}

relationship ManyToOne {
    OrderDelivery{deliveryManager required} to Users{orderdeliveryDeliverymanager}
}

relationship ManyToOne {
    OrderDelivery{deliveryBoy required} to Users{orderdeliveryDeliveryboy}
}

relationship ManyToOne {
    OrderDetails{order required} to Orders{orderdetailsOrder}
}

relationship ManyToOne {
    OrderDetails{product required} to Products{orderdetailsProduct}
}

relationship ManyToOne {
    Orders{customer required} to Customers{ordersCustomer}
}

relationship ManyToOne {
    PaymentMethods{customer required} to Customers{paymentmethodsCustomer}
}

relationship ManyToOne {
    ProductDetails{product required} to Products{productdetailsProduct}
}

relationship ManyToOne {
    Products{category required} to Categories{productsCategory}
}

relationship ManyToOne {
    ShippingDetails{order required} to Orders{shippingdetailsOrder}
}

relationship ManyToOne {
    Users{manager} to Users{usersManager}
}

relationship ManyToMany {
    Roles{user} to Users{role}
}

// Options
service * with serviceClass

paginate * with pagination

filter *
